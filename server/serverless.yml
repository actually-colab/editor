service: actually-colab-editor

plugins:
  - serverless-stage-manager
  - serverless-webpack
  - serverless-offline

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage,'dev'}
  region: us-east-1

  environment:
    EXECUTION_STAGE: ${self:provider.stage}
    AWS_DEPLOYMENT_REGION: ${self:provider.region}

    AC_PGSQL_HOST: localhost
    AC_PGSQL_USER: admin
    AC_PGSQL_PASSWORD: password
    AC_PGSQL_DATABASE: AC-dev

    AC_PGSQL_USERS_TABLE_NAME: ${self:custom.pgsqlTableNames.usersTableName}
    AC_PGSQL_NOTEBOOKS_TABLE_NAME: ${self:custom.pgsqlTableNames.notebooksTableName}
    AC_PGSQL_CELLS_TABLE_NAME: ${self:custom.pgsqlTableNames.cellsTableName}
    AC_PGSQL_OUTPUTS_TABLE_NAME: ${self:custom.pgsqlTableNames.outputsTableName}
    AC_PGSQL_ACTIVE_SESSIONS_TABLE_NAME: ${self:custom.pgsqlTableNames.activeSessionsTableName}

custom:
  stages:
    - dev

  pgsqlTableNames:
    usersTableName: User
    notebooksTableName: Notebook
    notebookAccessLevelsTableName: NotebookAccessLevel
    cellsTableName: Cell
    outputsTableName: Output
    activeSessionsTableName: ActiveSession

  serverless-offline:
    stage: ${self:provider.stage}

  webpack:
    webpackConfig: 'webpack.config.ts'
    packager: 'yarn'
    includeModules: true

functions:
  test:
    handler: src/index.handler
    events:
      - http:
          path: /test
          method: get
          cors: true

  authorizer:
    handler: src/authorizer/authorizer.handler

  login:
    handler: src/authorizer/login.handler
    events:
      - http:
          path: /login
          method: post 
          cors: true

  GET-notebooks:
    handler: src/rest/get-notebooks.handler
    events:
      - http:
          path: /notebooks
          method: get
          cors: true
          authorizer:
            name: authorizer
            identitySource: method.request.header.Authorization
            type: token

  POST-notebook:
    handler: src/rest/post-notebook.handler
    events:
      - http:
          path: /notebook
          method: post
          cors: true
          authorizer:
            name: authorizer
            identitySource: method.request.header.Authorization
            type: token

  share-notebook:
    handler: src/rest/share-notebook.handler
    events:
      - http:
          path: /notebook/{nb_id}/share
          method: post
          cors: true
          authorizer:
            name: authorizer
            identitySource: method.request.header.Authorization
            type: token
  
  socket-connection:
    handler: src/socket/connection.handler

    events:
      - websocket:
          route: $connect
          authorizer:
            name: authorizer
            identitySource: route.request.header.Authorization
          
      - websocket:
          route: $disconnect
      - websocket:
          route: $default

  socket-edit-cell:
    handler: src/socket/cell/edit-cell.handler

    events:
      - websocket:
          route: edit_cell
