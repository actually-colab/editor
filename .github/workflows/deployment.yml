name: Actually Colab API Deployment

on:
  release:
    types: [created]

jobs:
  bump-version:
    name: Bump repository version tags
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.release.target_commitish }}

      - name: Set bot git config name
        run: git config --global user.name "GitHub CD bot"

      - name: Set bot git config email
        run: git config --global user.email "github-cd-bot@actuallycolab.org"

      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12
          always-auth: true
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies for root
        run: yarn install --frozen-lockfile

      - name: Create a new release version
        run: yarn version --new-version ${{ github.event.release.tag_name }}
        env:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  server:
    name: Deploy editor/server
    environment: SLS
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.release.target_commitish }}
    
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Make .env.production file
        uses: actually-colab/github-action-create-env-file@v2.3
        with:
          envkey_GOOGLE_AUTH_WEB_CLIENT_ID: ${{ secrets.GOOGLE_AUTH_WEB_CLIENT_ID }}
          envkey_GOOGLE_AUTH_WEB_CLIENT_SECRET: ${{ secrets.GOOGLE_AUTH_WEB_CLIENT_SECRET }}

          envkey_PROD_AUTH_SECRET: ${{ secrets.PROD_AUTH_SECRET }}

          envkey_DB_HOST: ${{ secrets.DB_HOST }}
          envkey_DB_NAME: ${{ secrets.DB_NAME }}
          envkey_DB_USERNAME: ${{ secrets.DB_USERNAME }}
          envkey_DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

          envkey_MAIL_HOST: ${{ secrets.MAIL_HOST }}
          envkey_MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
          envkey_MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}

          directory: ./server
          file_name: .env.production

      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12
          always-auth: true
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies for root
        run: yarn install --frozen-lockfile

      - name: Install dependencies for types
        run: yarn install --frozen-lockfile
        working-directory: ./types

      - name: Install dependencies for server
        run: yarn install --frozen-lockfile
        working-directory: ./server

      - name: Create a new release version
        run: yarn version --new-version ${{ github.event.release.tag_name }} --no-git-tag-version
        working-directory: ./server
        env:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy API
        run: yarn deploy:prod:ci
        working-directory: ./server
        env: 
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  types:
    name: Deploy editor/types
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.release.target_commitish }}

      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12
          always-auth: true
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies for types
        run: yarn install --frozen-lockfile
        working-directory: ./types

      - name: Create a new release version
        run: yarn version --new-version ${{ github.event.release.tag_name }} --no-git-tag-version
        working-directory: ./types
        env:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to NPM
        run: yarn publish --access public
        working-directory: ./types
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  client:
    name: Deploy editor/client
    runs-on: ubuntu-latest
    needs: types
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.release.target_commitish }}

      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12
          always-auth: true
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies for client
        run: yarn install --frozen-lockfile
        working-directory: ./client

      - name: Build client
        run: yarn build
        working-directory: ./client

      - name: Create a new release version
        run: yarn version --new-version ${{ github.event.release.tag_name }} --no-git-tag-version
        working-directory: ./client
        env:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to NPM
        run: yarn publish --access public
        working-directory: ./client
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  docs:
    name: Dispatch an update to https://docs.actuallycolab.org
    runs-on: ubuntu-latest
    needs: client
    steps:
      - name: Generate docs site re-deploy
        uses: benc-uk/workflow-dispatch@v1.1
        with:
          workflow: Actually Colab API Deployment
          repo: actually-colab/docs
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          ref: master
